[{"title":"心情品读","date":"2016-04-07T16:00:00.000Z","path":"2016/04/08/essay/heart/","text":"你简单，世界就简单 何谓素心？心地纯朴之意。语出南朝宋颜延之《陶徵士诔》：“弱不好弄，长实素心。”如此看来，素心做人，古往今来，格外追崇。 汉语拼音创始人之一的周有光，这位100多岁的世纪老人每日博览群书，笔耕不辍，特别“潮”的是，他还开设了博客。他的文字如一股春雨，润物无声，另辟了一块清新之地。2011年，他出版了新书《拾贝集》。亚里士多德说：“人生最终的价值在于觉醒和思考的能力，而不只在于生存。”人生旅程，无论欢悦悲哀，无论厚重恬淡，无论得失成败，都应虔诚于生命体验，求学于人生始终。这才是人生的最高品味。 人，存一点素心，你简单了，世界也就简单了。拥有一份淡泊心志，宁静致远的心境，望窗外花开花落，观天空云卷云舒，思大海潮来潮往，品人生起起落落，在生命长河里活出自己的那份精彩，在喧嚣尘世里活出一份坦然。 素心之人，宁静致远。作为“人居环境之父”的吴良镛，是中国科学院院士、中国工程院院士、世界人居学会主席……数不清的荣誉、成就，却没能让他停下前进的步伐。然而，这位建筑大师异常谦逊：“我的作品不多，都是大家一起做的。”不以物喜、不以己悲，是其成就斐然永葆创新活力的秘诀所在。 《菜根谭》里说得好：“古人以不贪为宝，所以度越一世。”在纷繁变幻的世道中，只有饱经风霜的人，才能看透事物，破译人性，以成熟、理性的风范处事，以豁达、睿智的风格做事。包龙图有首诗写道：“法立奸胥畏，官清凭素心。”这是他的居官心得，才使他清正廉洁，至今英名远扬。 繁华时代，坚守一份简朴，恬静淡泊的人生，其实就是精彩人生。拥有一颗素心，犹如品茗饮酒，或苦或甜，亦辛亦涩，唇舌一番仔细玩味，方能感知人生大志大趣。不为官大官小而烦恼，不为利多利少而计较，上坡时低一低头，多一点谦卑；下坡时昂一昂首，多一点自信。学一学古圣和先贤，坐得住冷板凳，耐得住长寂寞，忍得住独清贫，你才能锻造出自己脱俗的风骨，你才能拥有博大的胸怀和气魄。 （摘编自2013年第10期《新阅读》，原题为《素心做人，唯美人生》）","tags":[{"name":"other","slug":"other","permalink":"//xmqbt.net/tags/other/"},{"name":"essay","slug":"essay","permalink":"//xmqbt.net/tags/essay/"}]},{"title":"angular 1.X 常用指令、函数","date":"2016-03-07T16:00:00.000Z","path":"2016/03/08/angular/angular_base/","text":"AngularJS指令 指令 描述 说明 ng-app 定义一个application的根元素 指令 ng-bind 将html元素的innerHTML绑定到application data 数据绑定 ng-click 定义html元素的click事件 绑定点击事件 ng-controller 定义一个application的控制对象 控制器 ng-disable 绑定application data到HTML元素的disabled属性 DOM节点 ng-hide 显示或隐藏HTML元素 DOM节点 ng-show 显示或隐藏HTML元素 DOM节点 ng-include 当前节点引用application中包含的HTML文件 Include ng-init 定义一个application的初始值 指令 ng-model 双向绑定application data 指令 ng-repeat 为集合中的每一个数据项重复创建一段HTML元素 指令 过滤器 过滤器 描述 currency 将数字格式化为现金格式 filter 从一个集合中选择子项 lowercase 将字符串转换为小写形式 uppercase 将字符串转换为大写形式 orderBy 通过一个表达式对集合元素进行排序 数据比较 方法 描述 angular.isArray() 判断给定对象是否为数组 angular.isDate() 判断给定对象是否为日期类型 angular.isDefined() 判断给定对象是否为定义过 angular.isElement() 判断给定对象是否为一个DOM对象 angular.isFunction() 判断给定对象是否为函数 angular.isNumber() 判断给定对象是否为数子 angular.isObject() 判断给定对象是否为Object类型 angular.isString() 判断给定对象是否为字符串 angular.isUndefined() 判断给定对象是否没有定义过（与angular.isDefined()相反） angular.isequals() 判断给定的两个对象是否相等 数据转换 方法 描述 angular.lowercase() 将字符串转换为小写形式 angular.uppercase() 将字符串转换为大写形式 angular.copy() 深拷贝一个对象或数组 JSON相关 方法 描述 angular.fromJSON() 将给定的JSON对象反序列化为字符串 angular.toJSON() 将给定的字符串序列化为JSON对象 基本API 方法 描述 angular.bootstarp() 手动引导AngularJS应用程序 angular.element() 将一个HTML元素包装成一个JQuery元素（然后你可以对它使用JQuery提供的方法） angular.module() 创建，注册或重新恢复一个AngularJS模块 angular.forEach() 遍历对象或数组中的每一个元素并执行一个函数 输入验证 属性 描述 $dirty 表示当前field中的内容被修改过 $valid 表示当前field中的内容是有效的 $invalid 表示当前field中的内容是无效的 $pristine 表示当前field中的内容还没被修改过","tags":[{"name":"javascript","slug":"javascript","permalink":"//xmqbt.net/tags/javascript/"},{"name":"angular","slug":"angular","permalink":"//xmqbt.net/tags/angular/"}]},{"title":"mongoDB 条件查询","date":"2016-02-11T16:00:00.000Z","path":"2016/02/12/mongodb/mongodb_select/","text":"条件操作符 “$lt” =&gt; “&lt;” “$lte” =&gt; “&lt;=” “$gt” =&gt; “&gt;” “$gte” =&gt; “&gt;=” “$ne” =&gt; “!=” 例 1: 某集合B集合中文档有属性x值为整数，需查找10&lt;x&lt;=30的文档 db.B.find({“x”:{“$gt”:10,”$lte”:30}}); 例 2: 从某集合B中查找日期属性day值大于2012/01/01的文档数据 db.B.find({“day”:{“$gt”:new Date(“2012/01/01”)}}) $in包含/$nin不包含 $in : 查询匹配指定条件值的文档； $nin ：查询不匹配指定条件值的文档； db.B.find({“x”:{“$in”:[‘值1’,’值2’,…..]}}) db.B.find({“x”:{“$nin”:[‘值1’,’值2’,…..]}}) $or或查询 $or:查询匹配多个条件多个值的文档； db.B.find({“$or”:[{“x”:{“$in”:[‘值1’,’值2’…]}},{“y”:”3”}]}) $all匹配所有 比如文档： {“name”:jack,”age”:[1,2,3]} {“name”:jack,”age”:[1,4,3]} db.B.find({“age”:{“$all”:[2,3]}}) ​ 结果：{“name”:jack,”age”:[1,2,3]} $exists 判断文档属性是否存在 db.B.find({“name”:{“$exists”:true}}) –查找属性name存在的文档 db.B.find({“name”:{“$exists”:false}}) –查找属性name不存在的文档 属性值为null情况 如下操作并可知道： db.C.find() { “_id” : ObjectId(“5018fccd1781352fe25bf511”), “a” : “14”, “b” : “14” } { “_id” : ObjectId(“5018fccd1781352fe25bf512”), “a” : “15”, “b” : “15” } { “_id” : ObjectId(“5018fccd1781352fe25bf510”), “a” : “13”, “b” : “13”, “c” : null } db.C.find({“c”:null}) { “_id” : ObjectId(“5018fccd1781352fe25bf511”), “a” : “14”, “b” : “14” } { “_id” : ObjectId(“5018fccd1781352fe25bf512”), “a” : “15”, “b” : “15” } { “_id” : ObjectId(“5018fccd1781352fe25bf510”), “a” : “13”, “b” : “13”, “c” : null } 可见查询属性c值为null文档，包括属性c值为null、该属性c不存在两个部分。若想只查询属性c为null的文档 如下： db.C.find({“c”:{“$in”:[null],”$exists”:true}}) { “_id” : ObjectId(“5018fccd1781352fe25bf510”), “a” : “13”, “b” : “13”, “c” : null } ​ $mod取模运算, $not元条件句 db.B.find({“age”:{“$mod”:[5,1]}}) –表示查找年龄/5余1的所有文档 若查找年龄/5余1之外的所有文档，可结合$not运算： db.B.find({“age”:{“$not”:{“$mod”:[5,1]}}}) 例： db.tianyc02.find({age:{$mod:[11,0]}}) { “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “name” : “xtt”, “age” : 11 } { “_id” : ObjectId(“50ea6b7312729d90ce6e341c”), “name” : “xtt”, “age” : 22 } db.tianyc02.find({age:{$not:{$mod:[11,0]}}}) { “_id” : ObjectId(“50ea6eba12729d90ce6e3423”), “name” : “xttt”, “age” : 111 } { “_id” : ObjectId(“50ea6eba12729d90ce6e3424”), “name” : “xttt”, “age” : 222 } $mod会将查询的值除以第一个给定的值，若余数等于第二个给定的值，则返回该结果。 $not与正则表达式联合使用时极为有效，用来查找那些与特定模式不匹配的文档。 ​ 正则表达式 db.B.find({“name”:/jack/i}) $size db.C.find() { “_id” : ObjectId(“501e71557d4bd700257d8a41”), “a” : “1”, “b” : [ 1, 2, 3 ] } { “_id” : ObjectId(“501e71607d4bd700257d8a42”), “a” : “1”, “b” : [ 1, 2 ] } db.C.find({“b”:{“$size”:2}}) { “_id” : ObjectId(“501e71607d4bd700257d8a42”), “a” : “1”, “b” : [ 1, 2 ] } ​ $slice 返回数组的一个子集，即对以某属性为基础，返回多少条（范围）。也可以接受偏移值和要返回的元素数量，来返回中间的结果。 db.C.find() { “_id” : ObjectId(“501e71557d4bd700257d8a41”), “a” : “1”, “b” : [ 1, 2, 3 ] } { “_id” : ObjectId(“501e71607d4bd700257d8a42”), “a” : “1”, “b” : [ 1, 2 ] } db.C.findOne({},{“b”:{“$slice”:[2,3]}}) { “_id” : ObjectId(“501e71557d4bd700257d8a41”), “a” : “1”, “b” : [ 3 ] } db.C.findOne({},{“b”:{“$slice”:-2}}) {“_id” : ObjectId(“501e71557d4bd700257d8a41”), “a” : “1”, “b” : [ 2, 3 ]} ​ $where 即可执行任务javascript作为查询的一部分。 $where的值可以是function、也可以是字符串等等。 db.C.find({“$where”:function(){return this.a == “1”}}) 与 db.C.find({“$where”:”this.a == ‘1’”}}) 注意：采用$where子句查询在速度上较常规查询慢的多。因文档需要从BSON转换成javascript对象，然后通过”$where”的表达式来运行。 不用利用索引。可用常规查询做前置过滤，配置”$where”查询进行调优，可达到不牺牲性能的要求。","tags":[{"name":"DB","slug":"DB","permalink":"//xmqbt.net/tags/DB/"},{"name":"mongoDB","slug":"mongoDB","permalink":"//xmqbt.net/tags/mongoDB/"}]},{"title":"mongoDB 常用命令","date":"2016-02-07T16:00:00.000Z","path":"2016/02/08/mongodb/mongodb_base/","text":"Help查看命令提示help;db.help();db.yourColl.help();db.youColl.find().help();rs.help(); 切换/创建数据库use yourDB;当创建一个集合(table)的时候会自动创建当前数据库 查询所有数据库show dbs; 删除当前使用数据库db.dropDatabase(); 从指定主机上克隆数据库db.cloneDatabase(“127.0.0.1”); 将指定机器上的数据库的数据克隆到当前数据库 从指定的机器上复制指定数据库数据到某个数据库db.copyDatabase(&quot;mydb&quot;, &quot;temp&quot;, &quot;127.0.0.1&quot;); 将本机的mydb的数据复制到temp数据库中 修复当前数据库db.repairDatabase(); 查看当前使用的数据库db.getName(); db db和getName方法是一样的效果，都可以查询当前使用的数据库 显示当前db状态db.stats(); 当前db版本db.version(); 查看当前db的链接机器地址db.getMongo();","tags":[{"name":"DB","slug":"DB","permalink":"//xmqbt.net/tags/DB/"},{"name":"mongoDB","slug":"mongoDB","permalink":"//xmqbt.net/tags/mongoDB/"}]},{"title":"IIS7 HTTPS 绑定主机头","date":"2015-12-09T05:44:42.000Z","path":"2015/12/09/other/IIS7_bing_https/","text":"IIS7 下面默认 HTTPS 绑定是无法指定主机头的，但我们可以通过手工修改IIS配置来实现主机头绑定。 打开C:\\Windows\\system32\\inetsrv\\config\\applicationHost.config 定位到如下位置： &lt;bindings&gt; &lt;binding protocol=&quot;https&quot; bindingInformation=&quot;*:443&quot; /&gt; &lt;binding protocol=&quot;net.tcp&quot; bindingInformation=&quot;808:*&quot; /&gt; &lt;binding protocol=&quot;net.pipe&quot; bindingInformation=&quot;*&quot; /&gt; &lt;binding protocol=&quot;net.msmq&quot; bindingInformation=&quot;localhost&quot; /&gt; &lt;binding protocol=&quot;msmq.formatname&quot; bindingInformation=&quot;localhost&quot; /&gt; &lt;binding protocol=&quot;http&quot; bindingInformation=&quot;*:80:www.console.com&quot; /&gt; &lt;/bindings&gt; 找到https的配置项目，修改为： &lt;binding protocol=&quot;https&quot; bindingInformation=&quot;*:443:www.console.com&quot; /&gt; 注意这里的www.console.com要换成你自己的域名，之后保存即可。","tags":[{"name":"IIS","slug":"IIS","permalink":"//xmqbt.net/tags/IIS/"},{"name":"Server","slug":"Server","permalink":"//xmqbt.net/tags/Server/"}]},{"title":"用shadowsock加速git clone","date":"2015-12-08T05:44:42.000Z","path":"2015/12/08/git/git_clone/","text":"#用shadowsock加速git clone因为在天朝，用git clone 下载 github上的仓库的时候，速度很慢，才几十k每秒，稍微大点的仓库，要等到猴年马月。利用shadowsocks的socks5代理，配置好后明显加速。用下面两条命令配置好后，保持shadowsocks客户端开启就行了。 121 git config --global http.proxy 'socks5://127.0.0.1:1080'2 git config --global https.proxy 'socks5://127.0.0.1:1080' shadowsocks的本地端口默认是1080 git协议开启代理可以查看这里 git仓库有的在国内有的在国外,国内的有gitcafe coding.net 开源中国git所以用国内的就没必要设置了，反而会慢。","tags":[{"name":"git","slug":"git","permalink":"//xmqbt.net/tags/git/"},{"name":"proxy","slug":"proxy","permalink":"//xmqbt.net/tags/proxy/"},{"name":"shadowsocks","slug":"shadowsocks","permalink":"//xmqbt.net/tags/shadowsocks/"}]},{"title":"风隐","date":"2014-04-01T16:00:00.000Z","path":"2014/04/02/essay/shiwenyi1/","text":"东风渐，沉香断。 指冷玉箫寒，湿冥冥尘烟花雾。 梅心惊破乱红舞，山水音随天去。","tags":[{"name":"essay","slug":"essay","permalink":"//xmqbt.net/tags/essay/"}]},{"title":"结婚，到底是为了什么","date":"2014-03-07T16:00:00.000Z","path":"2014/03/08/essay/marry/","text":"越来越多的男人讨不到老婆 因为越来越多女人不想结婚 女人说： 我想偶尔跟朋友出去，不想失去单身的自由； 我想高兴吃什么就吃什么，不想变成理所当然的煮饭婆； 我想花钱打扮自己让自己开心，不想每天想著要怎么省来贴补家用； 我想当妈妈永远的心肝宝贝，不想提心吊胆不知道婆婆什么时候会嫌我； 我想当永远的情人，不想在努力当个好老婆时，还要当老公的另一个妈。 男人说： 结了婚，当然要以家庭为重，不能老是往外跑； 结了婚，当然要入得了厨房，洗手做羹汤； 结了婚，当然要为两人的未来打拼，分担家计； 结了婚，当然要把我的家人当作你的家人一样； 结了婚，当然要做好老婆的本份 — 照顾好老公， 所以女人不懂… 那我结婚到底是为了什么？ 我爱你跟你说过的爱我一样多， 可是结了婚，我却要改变那么多 只为了当你的老婆， 我只能有你这一个朋友，还要当个抓住你的胃的煮饭婆， 你有工作，不一定会养我，只因为我也有自己的工作， 你娶了我只是身边多一个人，我嫁给你身边却是多了一家子人， 你们都过著习惯的生活，我却要舍弃我习惯过的生活。 但是男人也抱怨： 为了娶老婆我也是很辛苦， 我要有车子，要养房子，还要准备聘金还有钻石戒指， 我省吃俭用一辈子，为了娶老婆还要一直减少存款数字， 况且当人家老婆，本来就是这个样子， 要认命的持家，还要相夫教子…… 因为双方都这么辛苦， 所以越来越多女人不想结婚。 既可以让男人保有存款数字， 也不会让女人变成像是花钱请来的保姆， 所以男人啊，当你有天想问女人为什么不想结婚时， 请先帮女人想想，跟你结婚有什么好的呢？ 女人因为婚姻 得抛下自己的父母，来照顾男人的父母。 但男人不用 女人因为婚姻 得挺个又重又大的球十个月， 只为了替男人生下一个跟男人姓的下一代； 还得承受生完小孩後的体质变差、身材变形的後遗症， 但男人不用 女人因为婚姻 得放弃一卡车追求他的好男人， 并埋没了最美的青春； 但男人却不为青春所惧，反而愈老愈值钱 女人因为婚姻 得放弃父母给她二十多年的姓， 被冠上某某‘太太’二字； 但男人没变。 女人因为婚姻 得早上上班，晚上煮饭做家事带小孩， 有工作也有家事的压力； 但男人没差，反而多了个赚钱的人和不用给薪的女佣。 女人因为婚姻 得去适应一个完全不同的家庭和面对男人的亲友团批评， 女人如果试图寻求男人的保护时， 换来的是…男人不仅没有保护他的女人， 反而一起落井下石…在一个女人孤力无援的环境里。 男人啊 若在您的身边有这样的一个傻女人时， 请当她的笨男人，好好的珍惜她、照顾她吧 别忘了，她不是天生就该来照顾你们全家大小的， 而是因为她爱你…… 她受伤的时候，好好倾听她，支持她，保护她，为她拭泪， 她就会感动一辈子","tags":[{"name":"essay","slug":"essay","permalink":"//xmqbt.net/tags/essay/"}]}]